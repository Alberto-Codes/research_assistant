"""
State definitions for the Hello World graph.

This module defines the state class used to store data as it flows
through the nodes in the Hello World graph.
"""

from dataclasses import dataclass, field
from typing import List


@dataclass
class MyState:
    """
    State class for storing text values and timing information between nodes.

    Attributes:
        hello_text: The text generated by the HelloNode.
        world_text: The text generated by the WorldNode.
        combined_text: The combined hello and world text.
        hello_generation_time: Time taken to generate the hello text.
        world_generation_time: Time taken to generate the world text.
        combine_generation_time: Time taken to combine the texts.
        total_time: Total time taken for the entire graph execution.
        node_execution_history: History of node executions with their outputs.
        user_prompt: The user's input prompt for the AI agent.
        ai_response: The response generated by the AI agent.
        ai_generation_time: Time taken to generate the AI response.
    """

    hello_text: str = ""
    world_text: str = ""
    combined_text: str = ""
    hello_generation_time: float = 0.0
    world_generation_time: float = 0.0
    combine_generation_time: float = 0.0
    total_time: float = 0.0
    node_execution_history: List[str] = field(default_factory=list)
    user_prompt: str = ""
    ai_response: str = ""
    ai_generation_time: float = 0.0

    def __repr__(self) -> str:
        """Provide a nice string representation of the state."""
        if self.ai_response:
            # If we're using the AI agent mode
            return (
                f"MyState("
                f"user_prompt='{self.user_prompt}', "
                f"ai_response='{self.ai_response}', "
                f"ai_time={self.ai_generation_time:.3f}s, "
                f"total_time={self.total_time:.3f}s)"
            )
        else:
            # If we're using the original Hello World mode
            return (
                f"MyState("
                f"hello_text='{self.hello_text}', "
                f"world_text='{self.world_text}', "
                f"combined_text='{self.combined_text}', "
                f"hello_time={self.hello_generation_time:.3f}s, "
                f"world_time={self.world_generation_time:.3f}s, "
                f"combine_time={self.combine_generation_time:.3f}s, "
                f"total_time={self.total_time:.3f}s)"
            )
